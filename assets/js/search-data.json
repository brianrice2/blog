{
  
    
        "post0": {
            "title": "Working with Reviewers",
            "content": "Cater to your client . You may not deliver directly to an external client, but you still have internal clients and it’s important to keep them happy. . Put the key information in the very first sentence, and only include additional background or context if the reviewer prefers it. Some prefer to get all the details, while others prefer to hear just the main takeaways (but every one of them is busy). They may explicitly ask for a certain style, or may indirectly indicate it by doing the same in their own emails. If a person values brevity, they usually send brief emails. In either case, take the time to make sure your thoughts are well-articulated. | Check in frequently. Even if you’re stuck on a certain part, or have no update because you’ve been working on a different project, a quick sentence or two to update them goes a long way toward reducing confusion and keeping their mental model up-to-date and expectations realistic. | . Documentation . “If you didn’t document it, you didn’t do it.” If the only documentation for your design choice or methodology is contained in your handoff email, then you’ve failed. Clients and teams come and go, and chances are good that the next person to pick up the project won’t have access to the old emails sent to the distribution list (in this regard, Slack’s preserved channel history is very nice). As Don Norman would say, put that knowledge into the world; don’t keep it in your head. . Understand the impact of asking questions . Ask lots of questions, but to many different people. When you ask your reviewer a question, you trade your time for theirs. This makes sense when they have more experience than you and could answer the question quickly and/or provide valuable insight. In many other situations, this does not make sense. Don’t ask them for links to web pages or network files, to forward you an email unless you did not initially receive it, or questions which can be run by another (less senior) colleague first. Use your peers as resources! . Make it easy for the next person . This is sort of a catch-all: . Use consistent filenames. Your org probably has a preferred naming structure, even if it’s just convention. Better yet, if one doesn’t exist, create one! Knowing where the work for a project should be greatly reduces the time it takes to get up to speed on new projects. | Keep all work for a project together. Locality is king. If it’s necessary to coordinate between multiple network locations, add shortcuts between each primary location to quickly navigate. | Document your work! | . Considerations . All that said, understand that your reviewer is human too and can make mistakes. We’re all just people trying to do the best job we can, and sometimes our perspectives are incomplete. If you think something has not been considered, gently bring it up along with why you feel the way you do. . The little things can add up to become quite a lot, and mental confusion can easily overwhelm new workers and wear down experienced ones. .",
            "url": "https://brianrice2.github.io/blog/career/reviewers/2021/02/14/working-with-reviewers.html",
            "relUrl": "/career/reviewers/2021/02/14/working-with-reviewers.html",
            "date": " • Feb 14, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "2021 Bookshelf",
            "content": "When I think of all the books still left for me to read, I am certain of further happiness. - Jules Renard . Technical . Designing Data-Intensive Applications by Martin Kleppmann | The Elements of Statistical Learning by Jerome Friedman, Robert Tibshirani, and Trevor Hastie | . Nonfiction . The Long Fix by Vivian Lee | The Design of Everyday Things by Don Norman | . Personal Development . How to Win Friends and Influence People by Dale Carnegie | So Good They Can’t Ignore You by Cal Newport Really enjoyed the craftsman mindset idea. “Don’t obsess over discovering your true calling. Instead, master rare and valuable skills.” | . | Deep Work by Cal Newport | . Podcasts . The Happiness Lab | . Selected Articles . When may we be happy? | Paul Graham - Essays | . MLOps Community Reading Group . Rules of Machine Learning | 150 Successful Machine Learning Models: 6 Lessons Learned at Booking.com | .",
            "url": "https://brianrice2.github.io/blog/bookshelf/2021/01/01/bookshelf.html",
            "relUrl": "/bookshelf/2021/01/01/bookshelf.html",
            "date": " • Jan 1, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "MSiA Alumni Placements",
            "content": "As I look for an internship next summer as part of the MSiA program, referrals can be very valuable. In such a saturated entry-level market, not to mention the strain on businesses caused by COVID-19 and the slow economic recovery, every additional layer that an applicant can provide to demonstrate value and reassure employers matters a lot (of course, referrals are no substitute for skills or experience). . So, I created a simple dashboard to view alumni placements and in one place. You can see it here: https://rpubs.com/brianrice/msia-jobs . Data collected from the program website. Source code available on Github: https://github.com/brianrice2/msia-jobs .",
            "url": "https://brianrice2.github.io/blog/msia/alumni/northwestern/career/2020/10/01/msia-alumni-placements.html",
            "relUrl": "/msia/alumni/northwestern/career/2020/10/01/msia-alumni-placements.html",
            "date": " • Oct 1, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "POMDPs",
            "content": "What are POMDPs? . After browsing around I have determined the POMDPs are not the easiest thing to explain or understand. So I wanted to write a gentle background that could help me, and maybe others, understand it better. . At a high level, agents interact with their environments and make decisions in order to maximize their reward. However in the real world, decision makers rarely (never) have perfect insight into the state of their environment. Thus the partially observable part of the name. . So, agents maintain a probability distribution of the environment they are a part of (called the belief state), and each possible state of the environment has associated actions (with their own rewards and effects on the environment) as well as observations (feedback that the agent receives as to the current state). . How are they useful? . POMDPs have proven useful for ML/AI applications, specifically reinforcement learning and healthcare: . Reinforcement Learning . POMDPs can be used to guide the learning agent&#39;s actions. If you think about it intuitively, RL environments and POMDPs both involve: . An external environment (i.e., the agent&#39;s effects on the environment are negligible) | An agent seeking to maximize some reward function | Imperfect information about the world | . Then hopefully, we can find the optimal policy for the agent to act upon. . Healthcare . Since a patient&#39;s condition often manifests as nonspecific symptoms, doctors have limited insight into the true underlying state the patient is in. By using readings, scans, and other proxy measurements, care providers are able to generate more observations and reduce the uncertainty in their belief state, or in other words, come from a differential diagnosis to a (specific) diagnosis. . Wikipedia provides a few other interesting examples: . Management of patients with ischemic heart disease | Assistive technology for persons with dementia | . Solving POMDPs . Solvers are of course concerned with finding the best possible action, in terms of maximized reward, given an &quot;external&quot; environment. There are a couple ways to solve POMDPs, mostly concerned with numerical solutions as opposed to analytical ones. . For all of them, or at least the ones listed below, we calculate a value function for each time horizon to calculate the reward at $t = 1, 2, 3, ...$ . This value function maps from the belief state onto $ mathbb{R}$, representing the reward of a particular action for a particular belief state. Essentially, each action&#39;s reward function is piecewise-linear-convex, and the value function simply takes the maximum. . (R code shown below) . library(tidyverse) theme_set(theme_minimal()) . Registered S3 methods overwritten by &#39;ggplot2&#39;: method from [.quosures rlang c.quosures rlang print.quosures rlang Registered S3 method overwritten by &#39;rvest&#39;: method from read_xml.response xml2 ── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ── ✔ ggplot2 3.1.1 ✔ purrr 0.3.2 ✔ tibble 2.1.1 ✔ dplyr 0.8.0.1 ✔ tidyr 0.8.3 ✔ stringr 1.4.0 ✔ readr 1.3.1 ✔ forcats 0.4.0 ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ✖ dplyr::filter() masks stats::filter() ✖ dplyr::lag() masks stats::lag() . f1 &lt;- function(x) 2 - x f2 &lt;- function(x) 3 * x f_max &lt;- function(x) { pmax(approxfun(x, f1(x))(x), approxfun(x, f2(x))(x)) } ggplot(data.frame(x = c(0, 1)), aes(x = x)) + stat_function(fun = f1, color = &quot;blue&quot;) + annotate(&quot;text&quot;, x = 0.975, y = 1.15, label = &quot;a1&quot;) + stat_function(fun = f2, color = &quot;green&quot;) + annotate(&quot;text&quot;, x = 0.025, y = 0.25, label = &quot;a2&quot;) + stat_function(fun = f_max, color = &quot;yellow&quot;, alpha = 0.3, size = 5) + labs(x = &quot;Belief space&quot;, y = &quot;Action reward&quot;, title = &quot;Policy selection for simple 1D [0,1] belief space&quot;, subtitle = &quot;Optimal policy highlighted in yellow&quot;) . 1. Value iteration . Starting at $t = 1$, we build up one period at a time until we reach our desired time horizon. Over a long enough time span, these value functions should converge. . 2. Policy iteration . Pick a policy and calculate the value function. Use a Bellman equation to update the value function towards optimality, and then update the policy. . 3. Witness algorithm . There&#39;s a succinct description here: . It concentrates on finding the best value function $v$ for each action separately. Once it finds these, it will combine them into the final $v&#39;$ value function [to use for some belief region]. . 4. Heuristic Search Value Iteration (HSVI) . HSVI uses a tree search and heuristics, based on the based on upper and lower bounds of the optimal value function, to guide local updates. You can read more in the paper on arXiv. . Working with them computationally . There&#39;s a pomdp package available on CRAN and Github, courtesy of Hossein Kamalzadeh, Michael Hahsler, and Anthony Cassandra. It provides the following example usage: . library(pomdp) data(&quot;Tiger&quot;) sol &lt;- solve_POMDP(Tiger) sol sol$solution . So in essence, we provide the details of the environment and the rewards of actions, and receive back a solution policy to direct our decisions. . There&#39;s a lot more to explore here, and I&#39;m interested in seeing how this area interacts with the renewed focus on reinforcement learning research. . Want to learn more? (Resources) . Following are the resources I&#39;ve learned from, and are a good starting point if you&#39;re interested in learning more: . Wikipedia | POMDPs for Dummies | A tutorial on partially observiable Markov decision processes | Geoff Hollinger&#39;s lecture | Sachin Patil&#39;s lecture | A brief introduction to RL | .",
            "url": "https://brianrice2.github.io/blog/pomdps/2020/07/01/pomdps.html",
            "relUrl": "/pomdps/2020/07/01/pomdps.html",
            "date": " • Jul 1, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "AI in Healthcare",
            "content": "My dad’s experience with skin cancer has made me interested in the intersection of AI and healthcare - how can we take advantage of all the data and analytics at our disposal in order to improve the wellness for the people around us? . Skin cancer is the most prevalent type of cancer in the United States1, yet much of the country does not have reliable access to dermatologists. These barriers can come in a variety of forms - financial, geographical, cultural. . Financial barriers may be the most common, but also the hardest to resolve outside of broad policy changes. Three in four Americans live paycheck-to-paycheck2, and copays and cost of treatments not covered by insurance present a significant enough financial setback that many individuals simply avoid checkups in the first place. To make things worse, minority groups are typically paid less and their symptoms are taken less seriously by medical professionals. Karla’s experiences detailed below happen a lot more frequently than many notice (thread): . I was hospitalized last week for a very accelerated heart rate, very low BP, and cycling oxygen levels. And my entire experience at Alameda hospital was of one of being punished for being “insubordinate”. — Karla Monterroso ( @karlitaliliana) . There are some actual reasons why skin lesions may be harder to detect on darker skin. Most reasons are not those. I like this quote from Hardeman, Medina, and Kozhimannil: . Most physicians are not explicitly racist and are committed to treating all patients equally. However, they operate in an inherently racist system…Structural racism, the systems-level factors related to, yet distinct from, interpersonal racism, leads to increased rates of premature death and reduced levels of overall health and well-being. . A good goal, which is entirely unoriginal, is fair and accessible healthcare for everyone. But after an explosion of data and advances in machine learning, we may finally be able to make that happen. It will take a long time and a lot of careful consideration and hard work, but it can impact so many people around the globe. . AI is in a unique position to transform healthcare, but there are a lot of challenges to consider: . Race can be treated as a restricted feature during training, preventing models from automatically associating race with certain levels of care or health outcomes. However, existing systematic biases in data will likely be very difficult to separate from the any collected data. White patients often make up a disproportionately high number of samples, and skin lesions are particularly difficult to detect in skin of color. . | Doctors are notoriously over-worked, with an average visit outlasted by the clerical work doctors must complete afterward. AI can help on both fronts: . Virtual assistants can translate a doctor’s verbal descriptions in real time into formatted notes. See: Suki | A preliminary round of AI-based screenings can provide an initial opinion and highlight particularly informative areas that guided its decision. Models should be highly sensitive, since a patient’s case can be easily passed off to a doctor or specialist for further review rather than risking many false negatives. | Interestingly, American culture may also be a factor: working in a society which so greatly values independce, doctors in the United States are more reluctant to partner with an AI system than in other countries like India. | . | . In whatever capacity AI can be reasonably, safely, and effectively implemented, the focus should be on worker assistance rather than replacement. Deep learning systems are highly sophisticated by historical standards, but can still be fooled by adversarial and out-of-distribution examples. Holding out for a perfect, state-of-the-art system will in all likelihood never be widely adopted - DeepMind is not our role model here. But there is so much to gain - we may as well give it a shot. .",
            "url": "https://brianrice2.github.io/blog/healthcare/2020/05/01/ai-in-healthcare.html",
            "relUrl": "/healthcare/2020/05/01/ai-in-healthcare.html",
            "date": " • May 1, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "2020 Bookshelf",
            "content": "I’ve decided to make a specific post for the books I read each year. This is partly to better remember the books I read, but also to encourage me to read more (for fear of shame from strangers on the internet). Lately, they have been a welcome reprieve from social media and the constant barrage of despairing news stories. . The list will be updated over time as I start and finish new books. So, here is my list for 2020: . Clean Code by Robert Martin | Build a Career in Data Science by Emily Robinson and Jacqueline Nolis (a great read!) | R for Data Science by Hadley Wickham and Garrett Grolemund | R Packages by Hadley Wickham | Deep Medicine by eric Topol This one took a while to get through! I found myself constantly looking up terminology and companies to get a better picture of what Eric was describing. Regardless, it was really interesting to hear the perspective of medical practitioners and not just AI researchers. | . | On Tyranny by Timothy Snyder | 1984 by George Orwell | SQL Indexing and Tuning by Markus Winand | Fluent Python, 2nd ed. by Luciano Ramalho An excellent read — I learned a ton! | . | [Unfinished] Designing Data-Intensive Applications by Martin Kleppmann | [Unfinished] The Best Short Stories of Dostoevsky, comprised of: White Nights | The Honest Thief | The Christmas Tree and a Wedding | The Peasant Marey | Notes from the Underground | A Gentle Creature | The Dream of a Ridiculous Man | . | .",
            "url": "https://brianrice2.github.io/blog/bookshelf/2020/01/01/bookshelf.html",
            "relUrl": "/bookshelf/2020/01/01/bookshelf.html",
            "date": " • Jan 1, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "Resources",
            "content": "Just some links to sites and articles I like—you might also enjoy them. . Deep Learning . Colah: Understanding LSTM Networks | Andrej Karpathy: The Unreasonable Effectiveness of Recurrent Neural Networks | Chuan Li and Michael Wand - Combining Markov Random Fields and Convolutional Neural Networks for Image Synthesis (Paper) (Code) | Sketch-based images | Generating Abstract Patterns with TensorFlow (Code) | Generating Large Images from Latent Vectors (Code) | Google AI - Looking Back at 2019 | Andrej Karpathy - A Recipe for Training Neural Networks | Matt H / Daniel R (BYU) - Practical Advice for Building Deep Neural Networks | . Visualization . Darkhorse Analytics | Alberto Cairo - The Functional Art | . Blogs . Google AI | TensorFlow | NVIDIA | fast.ai | r y x, r | Chris Svec - Embedded Systems 101 | . ML/AI Articles . Chris Yiu - DeepIndex - some of the coolest applications of AI out there, organized by industry/application space. | Arvind Narayanan - How to recognize AI snake oil | Michael I. Jordan - Artificial Intelligence - The Revolution Hasn’t Happened Yet | Backing off towards simplicity - why baselines need more love Take an existing baseline or write it yourself, ensure it remains simple and fast. Then take this simple and fast baseline and push it as far as possible. This means tuning hyperparameters extensively, trying a variety of regularization techniques, sanity checking against bugs and potentially flawed assumptions…As it is fast, you can spend many runs tuning your hyperparameters. As it is simple, bugs and flawed assumptions become easier to find as the model isn’t powerful enough to hide it from you. . | Shreya Shankar’s blog | . Software . For not even working in software, it seems I read an awful lot about software engineering… . Jeff Dean and Luiz André Barroso - The Tail at Scale | Bob Martin - Clean Code | Bob Martin - Agile Software Development | Julia Evans - What’s a Senior Engineer’s Job? | John Allspaw - On Being a Senior Engineer | Stephen Bush - The Ten Commandments of Egoless Programming | OmniTI - Writing Readable Code And the related Your Code May Be Elegant, but Mine Fucking Works | . | Sage Sharp - The Gentle Art of Patch Review | . Career . Lara Hogan - What sponsorship looks like | Anything from Terence Tao’s blog | Matt Might - 12 resolutions for grad students And check out the Related pages at the bottom of this page, too. | . | Optimize for your learning rate | . Podcasts . My most frequent listens: . Lex Fridman: Artificial Intelligence Lex tends a bit philosophical for my taste, where I am interested more on the engineering side, but still a great podcast. Being one of the more mainstream AI podcasts, there is plenty of content and he brings in some big names for the discussions. | . | NVIDIA: The AI Podcast | Software Engineering Daily (although most of this goes over my head) | Jocko Podcast | Linear Digressions Katie, a co-host of the show, recently gave a talk called Community-Building for Data Scientists as part of the MSiA Seminar Series. It was very interesting! | . | .",
            "url": "https://brianrice2.github.io/blog/resources/2019/12/01/resources.html",
            "relUrl": "/resources/2019/12/01/resources.html",
            "date": " • Dec 1, 2019"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Academic . I’m currently a graduate student at Northwestern University in the MS in Analytics program. . I received my BS from Purdue University in 2018 and studied math, actuarial science, and applied statistics. During my time I also completed an independent study covering dynamical systems and mathematical biology with Aaron Yip. . Interests . I’m interested in a variety of topics within math, statistics, and computer science: in college I particularly enjoyed group and ring theory and stochastic processes. For 2+ years out of college I worked in consulting, analyzing pension and other post-employment benefit plans. Now I’m back in school and learning about analytics, statistics and software engineering. I’m very interested in the engineering side of ML, like data pipelines (especially streaming), model deployment, and distributed systems. . In my free time, I enjoy reading, cycling, lifting, yoga, cooking, and more. . Contact . Feel free to shoot me a message or connect with me on LinkedIn or via email: brian dot rice at u.northwestern.edu. . What am I listening to? .",
          "url": "https://brianrice2.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://brianrice2.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}